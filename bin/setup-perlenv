#!/usr/bin/env perl

use strict;
use warnings;

my $app = __PACKAGE__->new();
$app->run();

=head1 NAME

App::PerlENV - Insert Abstract Here

=head1 SYNOPSIS

=head1 DESCRIPTION

=cut

sub new {
	my ($class, $arg) = @_;
	
	my $self = bless {
		root => $ENV{PERLENV_ROOT} || "$ENV{HOME}/.perlenv"
	};
	
	return $self;
}

sub run {
	my ($self) = @_;
	
	$self->mkdir($self->{root});
	my $shell_script = "export PERLENV_ROOT=$self->{root}\n" . <<'END';

export PERLENV_CURRENT_ENV=''
ORIG_PS1=$PS1

function perlenv () {
	local DIR="$PERLENV_ROOT/$1";
	if [ ! -d $DIR ]; then
		mkdir -p $DIR/bin
		mkdir -p $DIR/lib/perl5
	fi

	export PERL5OPT="-MApp::PerlENV::Setup ${PERL5OPT#-MApp::PerlENV::Setup}"
	export PATH=$PERLENV_ROOT/$1/bin:${PATH#$PERLENV_ROOT/$PERLENV_CURRENT_ENV/bin:}
	export PERL_CPANM_OPT="-L$PERLENV_ROOT/$1 ${PERL_CPANM_OPT#-L$PERLENV_ROOT/$PERLENV_CURRENT_ENV}"
	export PS1="($1)${PS1#\($PERLENV_CURRENT_ENV)}"
	export PERLENV_CURRENT_ENV=$1
}

function unperlenv() {
	export PERL5OPT=${PERL5OPT#-MApp::PerlENV::Setup}
	export PATH=${PATH#$PERLENV_ROOT/$PERLENV_CURRENT_ENV/bin:}
	export PERL_CPANM_OPT=${PERL_CPANM_OPT#-L$PERLENV_ROOT/$PERLENV_CURRENT_ENV}
	export PERLENV_CURRENT_ENV=''
	export PS1=$ORIG_PS1
}
END

	$self->write_file("$self->{root}/perlenv.sh", $shell_script);

	print <<END;
You should include $self->{root}/perlenv.sh in your shell to finish setting up
perlenv:

	. $self->{root}/perlenv.sh
	

END
}



sub mkdir {
	my ($self, $dir) = @_;
	CORE::mkdir($dir) || do {
		die "Couldn't mkdir $dir: $!\n" unless $! =~ m/exists/;
	};
}

sub write_file {
	my ($self, $file, $body) = @_;
	
	open(my $fh, '>', $file) || die "Couldn't open $file for writing: $!\n";
	print $fh $body;
	close($fh) || die "Couldn't close $file: $!\n";
}


1;
__END__


